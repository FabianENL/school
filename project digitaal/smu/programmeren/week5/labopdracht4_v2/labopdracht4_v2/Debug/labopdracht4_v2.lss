
labopdracht4_v2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  0000026a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000216  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000026a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000029c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000319a  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002d69  00000000  00000000  00003496  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000040e  00000000  00000000  000061ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00006610  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001745  00000000  00000000  00006634  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00007d79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 86 00 	call	0x10c	; 0x10c <main>
 104:	0c 94 09 01 	jmp	0x212	; 0x212 <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <main>:
 */ 

#include <avr/io.h>
int main()
{
	PORTA.DIR = PORTA.DIR | 0xF0;
 10c:	e0 e0       	ldi	r30, 0x00	; 0
 10e:	f4 e0       	ldi	r31, 0x04	; 4
 110:	80 81       	ld	r24, Z
 112:	80 6f       	ori	r24, 0xF0	; 240
 114:	80 83       	st	Z, r24
    PORTF.DIR = PORTF.DIR | 0xC;
 116:	e0 ea       	ldi	r30, 0xA0	; 160
 118:	f4 e0       	ldi	r31, 0x04	; 4
 11a:	80 81       	ld	r24, Z
 11c:	8c 60       	ori	r24, 0x0C	; 12
 11e:	80 83       	st	Z, r24
    
    
    while(1)
    {
        PORTF.OUTSET = PIN3_bm;
 120:	88 e0       	ldi	r24, 0x08	; 8
 122:	80 93 a5 04 	sts	0x04A5, r24	; 0x8004a5 <__TEXT_REGION_LENGTH__+0x7e04a5>
        // PORTA.OUTSET = 0x30;
		
		
		if(!(PORTE.IN & PIN3_bm) && (PORTE.IN & PIN2_bm) && (PORTE.IN & PIN1_bm) || (PORTE.IN & PIN3_bm) && (PORTE.IN & PIN2_bm) && !(PORTE.IN & PIN1_bm) || (PORTE.IN & PIN3_bm) && !(PORTE.IN & PIN2_bm) && (PORTE.IN & PIN1_bm)){
 126:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 12a:	83 fd       	sbrc	r24, 3
 12c:	08 c0       	rjmp	.+16     	; 0x13e <main+0x32>
 12e:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 132:	82 ff       	sbrs	r24, 2
 134:	04 c0       	rjmp	.+8      	; 0x13e <main+0x32>
 136:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 13a:	81 fd       	sbrc	r24, 1
 13c:	18 c0       	rjmp	.+48     	; 0x16e <main+0x62>
 13e:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 142:	83 ff       	sbrs	r24, 3
 144:	08 c0       	rjmp	.+16     	; 0x156 <main+0x4a>
 146:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 14a:	82 ff       	sbrs	r24, 2
 14c:	04 c0       	rjmp	.+8      	; 0x156 <main+0x4a>
 14e:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 152:	81 ff       	sbrs	r24, 1
 154:	0c c0       	rjmp	.+24     	; 0x16e <main+0x62>
 156:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 15a:	83 ff       	sbrs	r24, 3
 15c:	13 c0       	rjmp	.+38     	; 0x184 <main+0x78>
 15e:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 162:	82 fd       	sbrc	r24, 2
 164:	0f c0       	rjmp	.+30     	; 0x184 <main+0x78>
 166:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 16a:	81 ff       	sbrs	r24, 1
 16c:	0b c0       	rjmp	.+22     	; 0x184 <main+0x78>
			if(PORTA.OUTSET != 0x10){
 16e:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 172:	80 31       	cpi	r24, 0x10	; 16
 174:	a9 f2       	breq	.-86     	; 0x120 <main+0x14>
				PORTA.OUTCLR = 0xFF;
 176:	e0 e0       	ldi	r30, 0x00	; 0
 178:	f4 e0       	ldi	r31, 0x04	; 4
 17a:	8f ef       	ldi	r24, 0xFF	; 255
 17c:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x10;
 17e:	80 e1       	ldi	r24, 0x10	; 16
 180:	85 83       	std	Z+5, r24	; 0x05
 182:	ce cf       	rjmp	.-100    	; 0x120 <main+0x14>
			}
		} else if(!(PORTE.IN & PIN3_bm) && !(PORTE.IN & PIN2_bm) && (PORTE.IN & PIN1_bm) || (PORTE.IN & PIN3_bm) && !(PORTE.IN & PIN2_bm) && !(PORTE.IN & PIN1_bm)){
 184:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 188:	83 fd       	sbrc	r24, 3
 18a:	08 c0       	rjmp	.+16     	; 0x19c <main+0x90>
 18c:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 190:	82 fd       	sbrc	r24, 2
 192:	04 c0       	rjmp	.+8      	; 0x19c <main+0x90>
 194:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 198:	81 fd       	sbrc	r24, 1
 19a:	0c c0       	rjmp	.+24     	; 0x1b4 <main+0xa8>
 19c:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 1a0:	83 ff       	sbrs	r24, 3
 1a2:	14 c0       	rjmp	.+40     	; 0x1cc <main+0xc0>
 1a4:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 1a8:	82 fd       	sbrc	r24, 2
 1aa:	10 c0       	rjmp	.+32     	; 0x1cc <main+0xc0>
 1ac:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 1b0:	81 fd       	sbrc	r24, 1
 1b2:	0c c0       	rjmp	.+24     	; 0x1cc <main+0xc0>
			if(PORTA.OUTSET != 0x20){
 1b4:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 1b8:	80 32       	cpi	r24, 0x20	; 32
 1ba:	09 f4       	brne	.+2      	; 0x1be <main+0xb2>
 1bc:	b1 cf       	rjmp	.-158    	; 0x120 <main+0x14>
				PORTA.OUTCLR = 0xFF;
 1be:	e0 e0       	ldi	r30, 0x00	; 0
 1c0:	f4 e0       	ldi	r31, 0x04	; 4
 1c2:	8f ef       	ldi	r24, 0xFF	; 255
 1c4:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x20;
 1c6:	80 e2       	ldi	r24, 0x20	; 32
 1c8:	85 83       	std	Z+5, r24	; 0x05
 1ca:	aa cf       	rjmp	.-172    	; 0x120 <main+0x14>
			}
		} else if(!(PORTE.IN & PIN3_bm) && !(PORTE.IN & PIN2_bm) && !(PORTE.IN & PIN1_bm)){
 1cc:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 1d0:	83 fd       	sbrc	r24, 3
 1d2:	14 c0       	rjmp	.+40     	; 0x1fc <main+0xf0>
 1d4:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 1d8:	82 fd       	sbrc	r24, 2
 1da:	10 c0       	rjmp	.+32     	; 0x1fc <main+0xf0>
 1dc:	80 91 88 04 	lds	r24, 0x0488	; 0x800488 <__TEXT_REGION_LENGTH__+0x7e0488>
 1e0:	81 fd       	sbrc	r24, 1
 1e2:	0c c0       	rjmp	.+24     	; 0x1fc <main+0xf0>
			if(PORTA.OUTSET != 0x30){
 1e4:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 1e8:	80 33       	cpi	r24, 0x30	; 48
 1ea:	09 f4       	brne	.+2      	; 0x1ee <main+0xe2>
 1ec:	99 cf       	rjmp	.-206    	; 0x120 <main+0x14>
				PORTA.OUTCLR = 0xFF;
 1ee:	e0 e0       	ldi	r30, 0x00	; 0
 1f0:	f4 e0       	ldi	r31, 0x04	; 4
 1f2:	8f ef       	ldi	r24, 0xFF	; 255
 1f4:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x30;
 1f6:	80 e3       	ldi	r24, 0x30	; 48
 1f8:	85 83       	std	Z+5, r24	; 0x05
 1fa:	92 cf       	rjmp	.-220    	; 0x120 <main+0x14>
			}
		}
		else{
			if(PORTA.OUTSET != 0x00){
 1fc:	80 91 05 04 	lds	r24, 0x0405	; 0x800405 <__TEXT_REGION_LENGTH__+0x7e0405>
 200:	88 23       	and	r24, r24
 202:	09 f4       	brne	.+2      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 204:	8d cf       	rjmp	.-230    	; 0x120 <main+0x14>
				PORTA.OUTCLR = 0xFF;
 206:	e0 e0       	ldi	r30, 0x00	; 0
 208:	f4 e0       	ldi	r31, 0x04	; 4
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	86 83       	std	Z+6, r24	; 0x06
				PORTA.OUTSET = 0x00;
 20e:	15 82       	std	Z+5, r1	; 0x05
 210:	87 cf       	rjmp	.-242    	; 0x120 <main+0x14>

00000212 <_exit>:
 212:	f8 94       	cli

00000214 <__stop_program>:
 214:	ff cf       	rjmp	.-2      	; 0x214 <__stop_program>
